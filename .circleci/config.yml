aliases:
  - &is_main_branch
      equal: [ main, << pipeline.git.branch >> ]

commands:
  init-opam:
    description: Initialize opam
    steps:
      - run:
          name: Init opam
          command: |
            opam init --compiler=5.1.0 --disable-sandboxing -y
            opam install ocamlfind menhir ppxlib -y
            echo 'eval $(opam env)' >> "$BASH_ENV"

  link-opam:
    description: Create symlink 'third-party/ocaml/opam'
    steps:
      - run:
          name: Link opam into directory 'third-party/ocaml'
          command: |
            mkdir -p third-party/ocaml
            cd third-party/ocaml
            ln -s "$OPAM_SWITCH_PREFIX" opam

  execute-dromedary:
    description: Execute 'dromedary.py' to produce a BUCK file
    steps:
      - run:
          name: Run 'dromedary.py' and list the resulting BUCK file
          command: |
            python3 dromedary.py -s "$(basename $OPAM_SWITCH_PREFIX)" -o third-party/ocaml/BUCK
            cat third-party/ocaml/BUCK

  setup-for-linux:
    description: Linux installation steps
    steps:
      - run:
          name: Aptitude install
          command: |
            sudo apt-get update
            sudo apt-get install libssl-dev cmake clang lld opam zstd
      - init-opam
      - link-opam

  setup-for-macos:
    description: macOS installation steps
    steps:
      - run:
          name: Brew install
          command: |
            brew install cmake coreutils opam llvm zstd wget
            echo 'export PATH=/usr/local/opt/llvm/bin:/opt/homebrew/bin:"$PATH"' >> "$BASH_ENV"
      - init-opam
      - link-opam

version: 2.1
jobs:
  test-on-linux:
    description: |
      Run tests on Linux
    docker:
      - image: cimg/rust:1.65.0
    resource_class: xlarge
    steps:
      - checkout
      - setup-for-linux
      - execute-dromedary

  test-on-macos:
    description: |
      Run tests on macOS
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - setup-for-macos
      - execute-dromedary

workflows:
  run-tests:
    jobs:
      - test-on-linux
      - test-on-macos
